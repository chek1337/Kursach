#pragma once
#include "GRID.h"
double FUN(int number, double x, double y, double z)
{
	switch (number)
	{
	case 0:
		return 0.4 * (5. + 0.2 * x + y + 30. * z + 0.5 * x * y + x * z + 10. * y * z + x * y * z);
		break;

		//case 0:
		//	return 8.*x*(y*z + z + y + 1.);
		//	break;
		//case 1:
		//	return 0;
		//	break;
		//case 2:
		//	return 3.*x*z*(y+1);
		//	break;

	default:
		throw "Ошибка в FUN";
		break;
	}
}

double LAMBDA(int number)
{
	switch (number)
	{
	case 0:
		//return 1;
		return 5.;
		break;


	case 1:
		return 2;
		break;
	case 2:
		return 2. / 3.;
		break;


	default:
		throw "Ошибка в LAMBDA";
		break;
	}
}

double GAMMA(int number)
{
	switch (number)
	{
	case 0:
		//return 4;
		return 0.4;
		break;


	case 1:
		return 0;
		break;
	case 2:
		return 1;
		break;

	default:
		throw "Ошибка в GAMMA";
		break;
	}
}



double GridAndSLAE::TETA(int number, double x, double y, double z)
{
	switch (number)
	{
	case 0: // Для теста с 1им КЭ
		return -1. - 2.5 * y - 5. * z - 5. * y * z;
		break;
	case 1:
		return 5. + 2.5 * x + 50. * z + 5. * x * z;
		break;
	case 2:
		return 150. + 5. * x + 50. * y + 5. * x * y;
		break;
		//case 0:
		//	return -2. * x*(z + 1);
		//	break;
		//case 1:
		//	return -2. * x * z;
		//	break;
		//case 2:
		//	return -2. * (1. + x + z + x * z);
		//	break;
		//case 3:
		//	return 2. * (1. + y + z + y*z);
		//	break;
		//case 4:
		//	return 2. * (1. + x + y + x*y) ;
		//	break;
		//case 5:
		//	return 2. * z * (1. + y);
		//	break;
		//case 6:
		//	return 2. * x * (1. + y);
		//	break;
		//case 7:
		//	return -2. * x * (1. + y);
		//	break;
		//case 8:
		//	return -2.*(1. + x + y + x * y);
		//	break;
	default:
		throw "Ошибка в TETA";
		break;
	}
}

double GridAndSLAE::UBETA(int number, double x, double y, double z)
{
	switch (number)
	{
	case 0:// Для теста с 1им КЭ
		return 9.1 + 11.25 * y + 50.5 * z + 30.5 * y * z;
		break;
	case 1:
		return 4.5 - 0.05 * x + 25. * z + 0.5 * x * z;
		break;
	case 2:
		return -10. - 0.3 * x - 4 * y;
		//	break;
		//case 0:
		//	return 8. * x*(z + 1);
		//	break;
		//case 1:
		//	return 11.5*x*z;
		//	break;
		//case 2:
		//	return 4.5 * (1. + x + z + x * z);
		//	break;
	default:
		throw "Ошибка в UBETA";
		break;
	}
}